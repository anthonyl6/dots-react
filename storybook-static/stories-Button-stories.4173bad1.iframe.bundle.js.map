{"version":3,"file":"stories-Button-stories.4173bad1.iframe.bundle.js","mappings":";AAsBA;;AAMA;;;;AAQA;;;AAGA;AAQA;AAQA;AAMA;AAOA;AAQA;;;AASA;AAIA;AAKA;;;;;;AASA;;;;;;;AASA","sources":["webpack://@dots-ui/react/./src/components/Button.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./css/main.css\";\nimport styled from \"styled-components\";\nimport { getThemeValue } from \"./ThemeProvider\";\n\nexport type ButtonProps = React.HTMLAttributes<\n  HTMLButtonElement | HTMLAnchorElement\n> & {\n  children: React.ReactNode;\n  variant?: \"text\" | \"outlined\" | \"contained\";\n  accent?: \"primary\" | \"secondary\" | \"success\" | \"warning\" | \"error\" | \"info\";\n  disabled?: boolean;\n  href?: string;\n  shape?: \"square\" | \"rounded\" | \"pill\";\n  size?: \"small\" | \"medium\" | \"large\";\n};\n\nexport const Button = (props: ButtonProps) => {\n  return <ButtonElement as={props.href ? \"a\" : \"button\"} {...props} />;\n};\n\nconst ButtonElement = styled.button<ButtonProps>`\n  font-size: ${(props) => {\n    if (props.size === \"small\") return \"0.75em\";\n    if (props.size === \"large\") return \"1.25em\";\n    return \"1em\";\n  }};\n  font-weight: 400;\n  padding: ${(props) => {\n    if (props.size === \"small\") return \"0.5em 1em\";\n    if (props.size === \"large\") return \"1em 2em\";\n    return \"0.75em 1.5em\";\n  }};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  width: ${(props) => {\n    if (props.shape === \"rounded\") {\n      if (props.size === \"small\") return \"2.5em\";\n      if (props.size === \"large\") return \"6em\";\n      return \"4em\";\n    }\n    return \"auto\";\n  }};\n  height: ${(props) => {\n    if (props.shape === \"rounded\") {\n      if (props.size === \"small\") return \"2.5em\";\n      if (props.size === \"large\") return \"6em\";\n      return \"4em\";\n    }\n    return \"auto\";\n  }};\n  border-radius: ${(props) => {\n    if (props.shape === \"square\" || !props.shape) return \"0.375em\";\n    if (props.size === \"small\") return \"1.25em\";\n    if (props.size === \"large\") return \"3em\";\n    return \"2em\";\n  }};\n  border: ${(props) => {\n    if (props.variant !== \"outlined\") return \"none\";\n    return `1px solid ${\n      props.theme[props.accent || \"info\"] ??\n      getThemeValue(props.accent || \"info\")\n    }`;\n  }};\n  background-color: ${(props) => {\n    if (props.variant === \"contained\")\n      return (\n        props.theme[props.accent || \"info\"] ??\n        getThemeValue(props.accent || \"info\")\n      );\n    return \"transparent\";\n  }};\n  color: ${(props) => {\n    if (props.variant === \"contained\") return \"#fff\";\n    return (\n      props.theme[props.accent || \"info\"] ??\n      getThemeValue(props.accent || \"info\")\n    );\n  }};\n\n  &:disabled {\n    border: ${(props) => {\n      if (props.variant !== \"outlined\") return \"none\";\n      return `1px solid ${props.theme.disabled ?? getThemeValue(\"disabled\")}`;\n    }};\n    background-color: ${(props) => {\n      if (props.variant === \"contained\")\n        return props.theme.disabled ?? getThemeValue(\"disabled\");\n      return \"transparent\";\n    }};\n    color: ${(props) => {\n      if (props.variant === \"contained\") return \"#fff\";\n      return props.theme.disabled ?? getThemeValue(\"disabled\");\n    }};\n  }\n\n  &:hover:not(:disabled) {\n    filter: drop-shadow(\n        0em 0.125em 0.625em\n          ${(props) =>\n            props.theme[props.accent || \"info\"] ??\n            getThemeValue(props.accent || \"info\")}80\n      )\n      brightness(110%);\n  }\n  &:active:not(:disabled) {\n    filter: drop-shadow(\n        0em 0.0625em 0.3125em\n          ${(props) =>\n            props.theme[props.accent || \"info\"] ??\n            getThemeValue(props.accent || \"info\")}80\n      )\n      brightness(80%);\n  }\n`;\n"],"names":[],"sourceRoot":""}